version: '3.8'
services:

  ## Postgres Docker Compose Config
  postgres-order:
    container_name: postgres-member
    image: postgres
    environment:
      POSTGRES_DB:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
      - ./postgres-member:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  postgres-payment:
    container_name: postgres-payment
    image: postgres
    environment:
      POSTGRES_DB:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
        - ./postgres-payment:/data/postgres
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:12.0.4
    command: ["start-dev","import-myrealm"]
    environment:
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: postgres
        DB_USER: postgres
        DB_PASSWORD: 1234
        KEYCLOAK_IMPORT: /tmp/myrealm.json

  postgres:
    container_name: postgres_data
    image: postgres
    environment:
      POSTGRES_DB: postgres_Db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
          - ./postgres-payment:/data/postgres
    expose:
          - "5432"
    ports:
          - "5432:5432"
    command: -p 5432
    restart: always

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: zodahwise@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"







#  postgres-inventory:
#    container_name: postgres-inventory
#    image: postgres
#    environment:
#      POSTGRES_DB: inventory-service
#      POSTGRES_USER: ptechie
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
#    volumes:
#      - ./postgres-inventory:/data/postgres
#    ports:
#      - "5432:5432"
#    restart: always
#
#  ## Mongo Docker Compose Config
#  mongo:
#    container_name: mongo
#    image: mongo:4.4.14-rc0-focal
#    restart: always
#    ports:
#      - "27017:27017"
#    expose:
#      - "27017"
#    volumes:
#      - ./mongo-data:/data/db
#
#  ## Keycloak Config with Mysql database
#  keycloak-mysql:
#    container_name: keycloak-mysql
#    image: mysql:5.7
#    volumes:
#      - ./mysql_keycloak_data:/var/lib/mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: keycloak
#      MYSQL_USER: keycloak
#      MYSQL_PASSWORD: password

#  keycloak:
#    container_name: keycloak
#    image: jboss/keycloak:12.0.4
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      DB_VENDOR: MYSQL
#      DB_ADDR: keycloak-mysql
#      DB_DATABASE: keycloak
#      DB_USER: keycloak
#      DB_PASSWORD: password
#      KEYCLOAK_IMPORT: /tmp/keycloak-realm.json
#    volumes:
#      - ./keycloak-realm.json:/tmp/keycloak-realm.json
#    ports:
#      - "8080:8080"
#    depends_on:
#      - keycloak-mysql
#    restart: always
#
#  ## Redis Docker Compose Config
#  redis: